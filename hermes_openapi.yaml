openapi: 3.0.3

info:
  title: Hermes - the identity verification API
  x-logo:
    url: "https://www.ubble.ai/wp-content/uploads/2021/08/Combo_Ubble_Logo_Exe_RVB-1-1-e1627891718121.png"
  description: |
    # Introduction
    Hermes is the identity verification API.

    # API standards

    ## Authentication
    The Ubble API uses two types of authentication. For standard accounts Basic authenication is used,
    and for certified accounts mutual TLS authentication in addition to Basic Authentication is used.
    Basic authentication credentials and mutual TLS authentication certificates can be managed in the
    client dashboard or by your account manager.

    ### Basic Authentication
    You must authenticate your calls by including your secret credentials in API requests.
    You can manage your credentials with your account manager. Your credentials carry many privileges,
    so be sure to keep them secure. Do not share your secret API keys in publicly accessible areas such as
    GitHub, client-side code, and so forth.

    Requests are authenticated using HTTP Basic Auth. Provide your CLIENT_ID and CLIENT_SECRET as the Basic Auth username and password.

    All API requests must be made over HTTPS as calls made over plain HTTP will fail. API requests without authentication will also fail.

    ### Mutual TLS Authentication
    You must authenticate your calls by including your secret credentials as well as your client certificate and key in API requests.
    You can manage your credentials and certificates with your account manager. Your credentials and certificates carry many privileges,
    so be sure to keep them secure. Do not share your secret API keys or API certificates in publicly accessible areas such as GitHub,
    client-side code, and so forth.

    Requests are authenticated using HTTP Basic Auth and/or mutual TLS Provide your CLIENT_ID and CLIENT_SECRET as the Basic Auth username
    and password. Provide your client certificate and client key as the mutual TLS certificate authentication.

    All API requests must be made over HTTPS as calls made over plain HTTP will fail. API requests without authentication will also fail.

    ## Required tag
    ### required
    Attributes tagged as `required` are **MUST** be present in requests and reponses.

    ### null values
    Attributes not marked as `required` can be null. In that case the attribute is not sent in the response.

    ## Ressources identifiers
    ### Format
    `{prefix}_{lower-case base-32 encoded GUID}`

    ### Ressources identifiers are formatted as follows

    | ressource name         | prefix | example                         |
    |------------------------|--------|---------------------------------|
    | applicants             | apl    | apl_tkoi5db4hryu5cei5vwoabr7we  |
    | identity-verifications | idv    | idv_tkoi5db4hryu5cei5vwoabr7we  |
    | organization           | org    | org_tkoi5db4hryu5cei5vwoabr7we  |
    | user-journey           | usj    | usj_tkoi5db4hryu5cei5vwoabr7we  |

    ## Content type
    The API accepts and returns `application/json` type.

    ## Status codes

    ## Error handling
    Errors 4xx and 5xx are formatted as follows:
    - `error_type`: a short descirption code
    - `error_codes`: a list of more detailed codes

    Error codes and error types can be formatted as follows:
    - `{target/attribute}__{error}`
    - `{nested_object}__{object_attribute}__{error}`

    ```json
    {
      "error_type": "invalid_request",
      "error_codes": [
        "birth_date__invalid_format",
        "first_name__required",
        "phone_number__country_code__invalid"
      ]
    }
    ````

    ## Common Objects/Properties

    | name         | format                                                                                                                                              | example                                                                     |
    |--------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------|
    | phone number | - country code with or without the '+' sign (+33 or 33 or 0033 should be valid) <br /> - number with potential spaces, hyphens or trailing zero(s) |  {<br />    "country_code": "+44",<br />    "number": "1234 567890"<br /> } |
    | date-time    | - Apply ISO8601<br /> - always UTC time                                                                                                             | 2017-07-21T17:32:28Z                                                        |

    # Verification flow
    ## Verification status state diagram
    ![cached image](https://plantuml-server.kkeisuke.dev/svg/TL91Zi8m3Bpd5PQu8NKVm07n2Yu8LI4rnLAQPXs7NNwFeHIbjDmIpqncFCekYMN9dJT6I3p27fdEvAnG7tuKb9oWWiS1eI7RiksC6QuHGqEXXPMdzY8dd_45KAWZzorZIdCmu5_jR9JCM3F-Pc9ivYmRzONh4jAWynIcY3ciZr1jnqGRS8mFxhLOnennbLS4tC2pWIzKvIxbLODX0lWVYGVHuc9LcOfH-3PrAglwxbPADBphk-XHSAhUlalx40nZwsTcOvKVVCPpJaetEmskN-CE.svg)
  version: 2.0.0

servers:
  - url: https://api.ubble.ai/v2/

tags:
  - name: identity verifications
    description: An identity verification service.
    externalDocs:
      description: Find out more
      url: https://ubble.ai
  - name: applicants
    description: Applicant management
    externalDocs:
      description: Find out more
      url: https://ubble.ai

paths:
  /identity-verifications:
    post:
      tags:
        - identity verifications
      summary: Create an identity verification
      description: Create an identity verification.
      operationId: create_identity_verification
      requestBody:
        description: Create an identity verification
        required: true
        content:
          application/json:
            examples:
              Only required data (creates a new applicant):
                $ref: "#/components/examples/identity_verification_creation_request_body_min"
              All possible data (uses an existing applicant):
                $ref: "#/components/examples/identity_verification_creation_request_body_max"
            schema:
              $ref: "#/components/schemas/IdentityVerification"
      responses:
        "201":
          description: Identity verification created
          content:
            application/json:
              examples:
                identity_verification_creation_response_body:
                  $ref: "#/components/examples/identity_verification_creation_response_body"
              schema:
                $ref: "#/components/schemas/IdentityVerification"
      callbacks:
        statusChanged:
          '{$request.body#/webhook_url}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        message:
                          type: string
                          example: Some event happened
                      required:
                        - message
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback

  /identity-verifications/{identity_verification_id}:
    get:
      tags:
        - identity verifications
      summary: Retrieve an identity verification by id
      description: Returns a single identity verification
      operationId: retrieve_identity_verification_by_id
      parameters:
        - name: identity_verification_id
          required: true
          in: path
          description: ID of identity verification to return
          schema:
            $ref: "#/components/schemas/IdentityVerificationId"
      responses:
        "200":
          description: Identity verification retrieved
          content:
            application/json:
              examples:
                identity_verification_creation_response_body:
                  $ref: "#/components/examples/identity_verification_retrieval_response_body"
              schema:
                $ref: "#/components/schemas/IdentityVerification"

  /applicants:
    post:
      tags:
        - applicants
      summary: Create an Applicant
      description: Create an Applicant
      operationId: create_applicant
      requestBody:
        description: Create an Applicant
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Applicant"
            examples:
              All possible data:
                $ref: "#/components/examples/applicant_creation_request_body"

      responses:
        "201":
          description: Applicant successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Applicant"
              examples:
                Always replies:
                  $ref: "#/components/examples/applicant_response_body"
        "400":
          description: Bad request
          content:
            application/json:
              examples:
                Invalid phone number:
                  value:
                    {
                      "error_type": "request_invalid",
                      "error_codes": ["phone_number__invalid_format"],
                    }

  /applicants/{applicant_id}:
    get:
      tags:
        - applicants
      summary: Retrieve an Applicant by ID
      description: Retrieve an Applicant by ID
      operationId: retrieve_applicant_by_id
      parameters:
        - name: applicant_id
          required: true
          in: path
          description: ID of Applicant to return
          schema:
            $ref: "#/components/schemas/ApplicantId"
      responses:
        "200":
          description: applicant retrieved succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Applicant"
              examples:
                Always replies:
                  $ref: "#/components/examples/applicant_response_body"
        "404":
          description: "[WIP] Applicant not found"

components:
  examples:
    identity_verification_creation_request_body_max:
      value:
        user_journey_id: usj_tkoi5db4hryu5cei5vwoabr7we
        applicant_id: apl_tkoi5db4hryu5cei5vwoabr7we
        declared_data:
          first_name: David
          last_name: Vincent
          birth_date: 1934-10-02
        phone_number:
          country_code: "+1"
          number: "2068133616"
        webhook_url: https://my.api/events/
        redirect_url: https://myweb.site?query-param=hello

    identity_verification_creation_request_body_min:
      value:
        user_journey_id: usj_tkoi5db4hryu5cei5vwoabr7we
        declared_data:
          first_name: David
          last_name: Vincent
        webhook_url: https://my.api/events/
        redirect_url: https://myweb.site?query-param=hello

    identity_verification_creation_response_body:
      value:
        id: idv_tkoi5db4hryu5cei5vwoabr7we
        _links:
          self:
            href: "https://api.ubble.ai/v2/identity-verifications/idv_tkoi5db4hryu5cei5vwoabr7we"
          applicant:
            href: "https://api.ubble.ai/v2/applicants/apl_tkoi5db4hryu5cei5vwoabr7we"
          active_link:
            href: "https://id.ubble.ai/4hryu5cei5/"

    identity_verification_retrieval_response_body:
      value:
        id: idv_tkoi5db4hryu5cei5vwoabr7we
        user_journey_id: usj_tkoi5db4hryu5cei5vwoabr7we
        status: declined
        reason_codes: [1003, 2001]
        applicant:
          id: apl_tkoi5db4hryu5cei5vwoabr7we
          created_on: 2017-07-21T17:32:28Z
          modified_on: 2017-07-21T17:40:32Z
          external_applicant_id: ext_osdfdfdb4hryu5cei5vwoabrk5k
          email: david.vincent@courriel.ml
          _links:
            self:
              href: https://api.ubble.ai/v2/applicants/apl_tkoi5db4hryu5cei5vwoabr7we
        verified_identity:
          first_name: David
          last_name: Vincent
          birth_date: 1934-10-02
        declared_data:
          first_name: David
          last_name: Vincent
          birth_date: 1934-10-02
        documents:
          - document_type: ID
            first_name: David
            last_name: Vincent
            front_image_signed_url: https://storage-b.staging.env.ubble.ai/staging-env-ubble-ai/NDYOOVHGZPAQ/a54b3393-f02a-47c9-a9c5-2f6ee73560e1/bb603e2f-5de9-40f2-9631-8285a33c24c0/tight_crops/FRA-I5-Front-bb603e2f-5de9-40f2-9631-8285a33c24c0-1679921906596.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=V9jgOdpOdeVSFTkA4ZsG%2F20230327%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230327T163228Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=87d8467ab92cbad7c00171af28e613d495f3ff441ce0ea59dd013d68abc50555
        face:
          image_signed_url: https://storage-b.staging.env.ubble.ai/staging-env-ubble-ai/NDYOOVHGZPAQ/a54b3393-f02a-47c9-a9c5-2f6ee73560e1/bb603e2f-5de9-40f2-9631-8285a33c24c0/live_face/bb603e2f-5de9-40f2-9631-8285a33c24c0-1679921946714.png?response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=V9jgOdpOdeVSFTkA4ZsG%2F20230327%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230327T163223Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2b7d87fec4f11f0df949da7beade2519cf1a51ce70fe9cc1cf0470d73f5340e4
        webhook_url: https://my.api/events/
        redirect_url: https://myweb.site?query-param=hello
        phone_number:
          country_code: "+1"
          number: "2068133616"
        _links:
          self:
            href: "https://api.ubble.ai/v2/identity-verifications/idv_tkoi5db4hryu5cei5vwoabr7we"
          applicant:
            href: "https://api.ubble.ai/v2/applicants/apl_tkoi5db4hryu5cei5vwoabr7we"
          active_link:
            href: "https://id.ubble.ai/4hryu5cei5/"

    applicant_creation_request_body:
      value:
        external_applicant_id: ext_osdfdfdb4hryu5cei5vwoabrk5k
        email: david.vincent@courriel.ml

    applicant_response_body:
      value:
        id: apl_tkoi5db4hryu5cei5vwoabr7we
        created_on: 2017-07-21T17:32:28Z
        modified_on: 2017-07-21T17:40:32Z
        organization_id: org_tkoi5db4hryu5cei5vwoabr7we
        external_applicant_id: ext_osdfdfdb4hryu5cei5vwoabrk5k
        email: david.vincent@courriel.ml
        _links:
          self:
            href: https://api.ubble.ai/v2/applicants/apl_tkoi5db4hryu5cei5vwoabr7we

    address_example_american:
      value:
        address_line1: 4022 Laguna St
        address_line2: Flat 456
        city: Santa Barbara
        zip: 93101
        country: US

  schemas:
    IdentityVerificationCreationResponseBody:
      type: object
      required: [id, _links]
      properties:
        id:
          $ref: "#/components/schemas/IdentityVerificationId"
        _links:
          $ref: "#/components/schemas/IdentityVerificationLinks"

    IdentityVerificationLinks:
      type: object
      allOf:
        - $ref: "#/components/schemas/SelfLink"
        - $ref: "#/components/schemas/ApplicantLink"
        - $ref: "#/components/schemas/ActiveLink"

    IdentityVerification:
      type: object
      required: [id]
      properties:
        id:
          $ref: "#/components/schemas/IdentityVerificationId"
      allOf:
        - $ref: "#/components/schemas/DatedObject"
        - $ref: "#/components/schemas/IdentityVerificationBase"

    IdentityVerificationBase:
      type: object
      required:
        [
          user_journey_id,
          applicant,
          declared_data,
          status,
          reason_codes,
          webhook_url,
          redirect_url,
          _links,
        ]
      properties:
        user_journey_id:
          readOnly: false
          allOf:
            - $ref: "#/components/schemas/BusinessPathId"
        applicant_id:
          readOnly: false
          allOf:
            - $ref: "#/components/schemas/ApplicantId"
        status:
          $ref: "#/components/schemas/VerificationStatues"
        reason_codes:
          type: array
          readOnly: true
          minItems: 0
          items:
            $ref: "#/components/schemas/ReasonCode"
        verified_identity:
          $ref: "#/components/schemas/Identity"
        declared_data:
          $ref: "#/components/schemas/DeclaredData"
        documents:
          type: array
          readOnly: true
          minItems: 0
          maxItems: 2
          items:
            $ref: "#/components/schemas/Document"
        face:
          $ref: "#/components/schemas/Face"
        webhook_url:
          type: string
          format: uri
        redirect_url:
          type: string
          format: uri
        _links:
          $ref: "#/components/schemas/IdentityVerificationLinks"

    DeclaredData:
      type: object
      required: [first_name, last_name]
      properties:
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        birth_date:
          type: string
          format: date

    Document:
      type: object
      required: [document_type, first_name, last_name, front_image_signed_url]
      readOnly: true
      properties:
        document_type:
          $ref: "#/components/schemas/DocumentTypes"
        first_name:
          type: string
          maxLength: 255
          readOnly: true
        last_name:
          type: string
          maxLength: 255
          readOnly: true
        front_image_signed_url:
          type: string
          format: uri
          readOnly: true
        back_image_signed_url:
          type: string
          format: uri
          readOnly: true

    Identity:
      type: object
      required:
        [first_names, last_name, birth_date, birth_place, nationality, gender]
      readOnly: true
      properties:
        first_names:
          type: string
          maxLength: 255
          readOnly: true
        last_name:
          type: string
          maxLength: 255
          readOnly: true
        married_name:
          type: string
          maxLength: 255
          readOnly: true
        birth_date:
          type: string
          format: date
          readOnly: true
        birth_place:
          $ref: "#/components/schemas/CountryCode"
        nationality:
          $ref: "#/components/schemas/CountryCode"
        gender:
          $ref: "#/components/schemas/Gender"

    Face:
      type: object
      required: [image_signed_url]
      readOnly: true
      properties:
        image_signed_url:
          type: string
          format: uri
          readOnly: true

    ApplicantLink:
      type: object
      required: [applicant]
      properties:
        applicant:
          $ref: "#/components/schemas/HalLink"

    ActiveLink:
      type: object
      required: [active_link]
      properties:
        active_link:
          $ref: "#/components/schemas/HalLink"

    ApplicantRelation:
      type: object
      properties:
        id:
          readOnly: false
          allOf:
            - $ref: "#/components/schemas/ApplicantId"

    Applicant:
      required: [id, organization_id]
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/ApplicantId"
        - $ref: "#/components/schemas/DatedObject"
        - type: object
          properties:
            organization_id:
              $ref: "#/components/schemas/OrganizationId"
        - $ref: "#/components/schemas/BaseApplicant"
        - $ref: "#/components/schemas/ApplicantsLinks"

    BaseApplicant:
      type: object
      properties:
        external_applicant_id:
          type: string
          example: "ext_osdfdfdb4hryu5cei5vwoabrk5k"
        email:
          type: string
          format: email
          example: david.vincent@courriel.ml

    ApplicantsLinks:
      type: object
      required: [_links]
      properties:
        _links:
          $ref: "#/components/schemas/SelfLink"

    Attempt:
      type: object
      properties:
        state:
          $ref: "#/components/schemas/AttemptStates"
        link:
          type: string
          format: uri
          example: https://id.ubble.ai/4hryu5cei5/

    DocumentTypes:
      type: string
      description: Type of document.
      enum:
        - driving license
        - ID
        - passport
        - residence permit

    VerificationStatues:
      type: string
      description: Status of the identity verification.
      readOnly: true
      enum:
        - pending
        - in_progress
        - approved
        - declined
        - new_capture_required

    AttemptStates:
      type: string
      description: States of an attempt.
      enum:
        - pending
        - capture_in_progress
        - checks_in_progress
        - completed
        - expired
        - capture_aborted
        - checks_aborted

    ReasonCode:
      type: integer
      description: Code indicating why a verification could not be approved.
      readOnly: true
      minimum: 1000
      maximum: 2999

    ApplicantId:
      type: string
      description: Applicant unique identifier.
      pattern: ^apl_\w+$
      example: apl_tkoi5db4hryu5cei5vwoabr7we
      readOnly: true

    OrganizationId:
      type: string
      description: Applicant unique identifier.
      pattern: ^apl_\w+$
      example: apl_tkoi5db4hryu5cei5vwoabr7we
      readOnly: true

    IdentityVerificationId:
      type: string
      description: Identity verification unique identifier.
      pattern: ^idv_\w+$
      example: idv_tkoi5db4hryu5cei5vwoabr7we
      readOnly: true

    BusinessPathId:
      type: string
      description: Business path unique identifier.
      pattern: ^bupa_\w+$
      example: usj_tkoi5db4hryu5cei5vwoabr7we
      readOnly: true

    Address:
      type: object
      description: Postal address.
      required: [address_line1, city, zip, country]
      properties:
        address_line1:
          type: string
          minLength: 1
          maxLength: 100
          example: 4022 Laguna St
        address_line2:
          type: string
          minLength: 1
          maxLength: 100
          example: Flat 456
        city:
          type: string
          minLength: 1
          maxLength: 100
          example: Santa Barbara
        zip:
          type: string
          minLength: 2
          maxLength: 20
          example: 93101
        country:
          $ref: "#/components/schemas/CountryCode"

    CountryCode:
      type: string
      format: ISO 3166-1 alpha-2
      example: US

    Gender:
      type: string
      description: Person gender.
      example: M
      enum:
        - M
        - F

    PhoneNumber:
      type: object
      required: [country_code, number]
      properties:
        country_code:
          $ref: "#/components/schemas/PhonePrefix"
        number:
          $ref: "#/components/schemas/DomesticPhoneNumber"

    PhonePrefix:
      type: string
      format: international phone prefix
      pattern: ^((\+)|(00))?(\d+)$
      example: "+33"

    DomesticPhoneNumber:
      type: string
      format: domestic phone number
      pattern: ^\d{1,14}$
      example: "2068133616"

    SelfLink:
      type: object
      required: [self]
      readOnly: true
      properties:
        self:
          $ref: "#/components/schemas/HalLink"

    HalLink:
      type: object
      required: [href]
      properties:
        href:
          type: string
          format: uri

    DatedObject:
      type: object
      required: [created_on, modified_on]
      properties:
        created_on:
          description: UTC Date time when the ressource was created
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
          readOnly: true
        modified_on:
          description: UTC Date time when the ressource was modified
          type: string
          format: date-time
          example: 2017-07-21T17:40:32Z
          readOnly: true
